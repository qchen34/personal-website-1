{"ast":null,"code":"var _jsxFileName = \"/Users/qiwei/Desktop/Desktop - Qiwei\\u2019s MacBook Pro M1/Job/AI Project/personal-website-1/frontend/src/components/GenerateText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './GenerateText.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenerateText = () => {\n  _s();\n  const [generatedText2000, setGeneratedText2000] = useState('');\n  const [generatedText4000, setGeneratedText4000] = useState('');\n  const [generatedText8000, setGeneratedText8000] = useState('');\n  const handleSubmit = async (e, model, setGeneratedText) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5001/generate', {\n        model\n      });\n      console.log('Response from backend:', response.data);\n      if (response.data.error) {\n        console.error('Backend error:', response.data.error);\n        setGeneratedText(`Error: ${response.data.error}`);\n      } else {\n        setGeneratedText(response.data.generated_text);\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Request error:', error);\n      console.error('Error response:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      setGeneratedText(`Error: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message}`);\n    }\n  };\n  const handleClear = setGeneratedText => {\n    setGeneratedText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Generate Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This model is trained on Shakespeare's text dataset.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Model with 2000 Iterations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleSubmit(e, 'out-shakespeare-char-2000', setGeneratedText2000),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleClear(setGeneratedText2000),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), generatedText2000 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Generated Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: generatedText2000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Model with 4000 Iterations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleSubmit(e, 'out-shakespeare-char-4000', setGeneratedText4000),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleClear(setGeneratedText4000),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), generatedText4000 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Generated Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: generatedText4000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Model with 8000 Iterations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleSubmit(e, 'out-shakespeare-char-8000', setGeneratedText8000),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleClear(setGeneratedText8000),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), generatedText8000 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Generated Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: generatedText8000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(GenerateText, \"kMESt8k7ys5Je+dZP/u2Op3H5x4=\");\n_c = GenerateText;\nexport default GenerateText;\nvar _c;\n$RefreshReg$(_c, \"GenerateText\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GenerateText","_s","generatedText2000","setGeneratedText2000","generatedText4000","setGeneratedText4000","generatedText8000","setGeneratedText8000","handleSubmit","e","model","setGeneratedText","preventDefault","response","post","console","log","data","error","generated_text","_error$response","_error$response2","_error$response2$data","message","handleClear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onClick","_c","$RefreshReg$"],"sources":["/Users/qiwei/Desktop/Desktop - Qiweiâ€™s MacBook Pro M1/Job/AI Project/personal-website-1/frontend/src/components/GenerateText.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './GenerateText.css'; // Import the CSS file for styling\n\nconst GenerateText = () => {\n  const [generatedText2000, setGeneratedText2000] = useState('');\n  const [generatedText4000, setGeneratedText4000] = useState('');\n  const [generatedText8000, setGeneratedText8000] = useState('');\n\n  const handleSubmit = async (e, model, setGeneratedText) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5001/generate', { model });\n      console.log('Response from backend:', response.data);\n      if (response.data.error) {\n        console.error('Backend error:', response.data.error);\n        setGeneratedText(`Error: ${response.data.error}`);\n      } else {\n        setGeneratedText(response.data.generated_text);\n      }\n    } catch (error) {\n      console.error('Request error:', error);\n      console.error('Error response:', error.response?.data);\n      setGeneratedText(`Error: ${error.response?.data?.error || error.message}`);\n    }\n  };\n\n  const handleClear = (setGeneratedText) => {\n    setGeneratedText('');\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <h1>Generate Text</h1>\n        <p>This model is trained on Shakespeare's text dataset.</p>\n        <div className=\"model-block\">\n          <h2>Model with 2000 Iterations</h2>\n          <form onSubmit={(e) => handleSubmit(e, 'out-shakespeare-char-2000', setGeneratedText2000)}>\n            <button type=\"submit\">Generate</button>\n            <button type=\"button\" onClick={() => handleClear(setGeneratedText2000)}>Clear</button>\n          </form>\n          {generatedText2000 && (\n            <div className=\"output\">\n              <h2>Generated Text</h2>\n              <p>{generatedText2000}</p>\n            </div>\n          )}\n        </div>\n        <div className=\"model-block\">\n          <h2>Model with 4000 Iterations</h2>\n          <form onSubmit={(e) => handleSubmit(e, 'out-shakespeare-char-4000', setGeneratedText4000)}>\n            <button type=\"submit\">Generate</button>\n            <button type=\"button\" onClick={() => handleClear(setGeneratedText4000)}>Clear</button>\n          </form>\n          {generatedText4000 && (\n            <div className=\"output\">\n              <h2>Generated Text</h2>\n              <p>{generatedText4000}</p>\n            </div>\n          )}\n        </div>\n        <div className=\"model-block\">\n          <h2>Model with 8000 Iterations</h2>\n          <form onSubmit={(e) => handleSubmit(e, 'out-shakespeare-char-8000', setGeneratedText8000)}>\n            <button type=\"submit\">Generate</button>\n            <button type=\"button\" onClick={() => handleClear(setGeneratedText8000)}>Clear</button>\n          </form>\n          {generatedText8000 && (\n            <div className=\"output\">\n              <h2>Generated Text</h2>\n              <p>{generatedText8000}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GenerateText;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}