{"ast":null,"code":"var _jsxFileName = \"/Users/qiwei/Desktop/Desktop - Qiwei\\u2019s MacBook Pro M1/Job/AI Project/personal-website-1/frontend/src/components/GenerateText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './GenerateText.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenerateText = () => {\n  _s();\n  const [generatedTexts, setGeneratedTexts] = useState({});\n  const [isLoading, setIsLoading] = useState({});\n  const handleGenerate = async model => {\n    setIsLoading(prev => ({\n      ...prev,\n      [model]: true\n    }));\n    try {\n      const response = await axios.post('https://api.chenqiwei.org/generate', {\n        model: model\n      });\n      setGeneratedTexts(prev => ({\n        ...prev,\n        [model]: response.data.generated_text || response.data.error\n      }));\n    } catch (error) {\n      console.error('Error:', error);\n      setGeneratedTexts(prev => ({\n        ...prev,\n        [model]: `Error: ${error.message}`\n      }));\n    } finally {\n      setIsLoading(prev => ({\n        ...prev,\n        [model]: false\n      }));\n    }\n  };\n  const handleClear = model => {\n    setGeneratedTexts(prev => {\n      const newTexts = {\n        ...prev\n      };\n      delete newTexts[model];\n      return newTexts;\n    });\n  };\n  const models = [{\n    section: \"Shakespeare Text Generator\",\n    description: \"This model is trained on Shakespeare's text dataset.\",\n    variants: [{\n      title: \"Model with 2000 Iterations\",\n      id: \"out-shakespeare-char-2000\"\n    }, {\n      title: \"Model with 4000 Iterations\",\n      id: \"out-shakespeare-char-4000\"\n    }, {\n      title: \"Model with 8000 Iterations\",\n      id: \"out-shakespeare-char-8000\"\n    }]\n  }, {\n    section: \"Jordan Peterson Text Generator\",\n    description: \"This model is trained on Jordan Peterson's lectures and writings.\",\n    variants: [{\n      title: \"Model with 2000 Iterations\",\n      id: \"out-peterson-char-2000\"\n    }, {\n      title: \"Model with 4000 Iterations\",\n      id: \"out-peterson-char-4000\"\n    }, {\n      title: \"Model with 8000 Iterations\",\n      id: \"out-peterson-char-8000\"\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: models.map((modelSection, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: modelSection.section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: modelSection.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"models-grid\",\n        children: modelSection.variants.map(variant => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"model-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: variant.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleGenerate(variant.id),\n              disabled: isLoading[variant.id],\n              children: isLoading[variant.id] ? 'Generating...' : 'Generate'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleClear(variant.id),\n              disabled: !generatedTexts[variant.id],\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), generatedTexts[variant.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Generated Text:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: generatedTexts[variant.id]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)]\n        }, variant.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(GenerateText, \"Nx33R1/8dDcFjI/lZVF0BL5veR4=\");\n_c = GenerateText;\nexport default GenerateText;\nvar _c;\n$RefreshReg$(_c, \"GenerateText\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GenerateText","_s","generatedTexts","setGeneratedTexts","isLoading","setIsLoading","handleGenerate","model","prev","response","post","data","generated_text","error","console","message","handleClear","newTexts","models","section","description","variants","title","id","className","children","map","modelSection","index","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/qiwei/Desktop/Desktop - Qiweiâ€™s MacBook Pro M1/Job/AI Project/personal-website-1/frontend/src/components/GenerateText.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './GenerateText.css'; // Import the CSS file for styling\n\nconst GenerateText = () => {\n  const [generatedTexts, setGeneratedTexts] = useState({});\n  const [isLoading, setIsLoading] = useState({});\n\n  const handleGenerate = async (model) => {\n    setIsLoading(prev => ({ ...prev, [model]: true }));\n    try {\n      const response = await axios.post('https://api.chenqiwei.org/generate', {\n        model: model\n      });\n      setGeneratedTexts(prev => ({\n        ...prev,\n        [model]: response.data.generated_text || response.data.error\n      }));\n    } catch (error) {\n      console.error('Error:', error);\n      setGeneratedTexts(prev => ({\n        ...prev,\n        [model]: `Error: ${error.message}`\n      }));\n    } finally {\n      setIsLoading(prev => ({ ...prev, [model]: false }));\n    }\n  };\n\n  const handleClear = (model) => {\n    setGeneratedTexts(prev => {\n      const newTexts = { ...prev };\n      delete newTexts[model];\n      return newTexts;\n    });\n  };\n\n  const models = [\n    {\n      section: \"Shakespeare Text Generator\",\n      description: \"This model is trained on Shakespeare's text dataset.\",\n      variants: [\n        { title: \"Model with 2000 Iterations\", id: \"out-shakespeare-char-2000\" },\n        { title: \"Model with 4000 Iterations\", id: \"out-shakespeare-char-4000\" },\n        { title: \"Model with 8000 Iterations\", id: \"out-shakespeare-char-8000\" }\n      ]\n    },\n    {\n      section: \"Jordan Peterson Text Generator\",\n      description: \"This model is trained on Jordan Peterson's lectures and writings.\",\n      variants: [\n        { title: \"Model with 2000 Iterations\", id: \"out-peterson-char-2000\" },\n        { title: \"Model with 4000 Iterations\", id: \"out-peterson-char-4000\" },\n        { title: \"Model with 8000 Iterations\", id: \"out-peterson-char-8000\" }\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"container\">\n      {models.map((modelSection, index) => (\n        <div key={index} className=\"section\">\n          <h1>{modelSection.section}</h1>\n          <p>{modelSection.description}</p>\n          <div className=\"models-grid\">\n            {modelSection.variants.map((variant) => (\n              <div key={variant.id} className=\"model-block\">\n                <h2>{variant.title}</h2>\n                <div className=\"button-container\">\n                  <button\n                    onClick={() => handleGenerate(variant.id)}\n                    disabled={isLoading[variant.id]}\n                  >\n                    {isLoading[variant.id] ? 'Generating...' : 'Generate'}\n                  </button>\n                  <button\n                    onClick={() => handleClear(variant.id)}\n                    disabled={!generatedTexts[variant.id]}\n                  >\n                    Clear\n                  </button>\n                </div>\n                {generatedTexts[variant.id] && (\n                  <div className=\"output\">\n                    <h3>Generated Text:</h3>\n                    <p>{generatedTexts[variant.id]}</p>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default GenerateText;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}