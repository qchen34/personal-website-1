{"ast":null,"code":"var _jsxFileName = \"/Users/qiwei/Desktop/Desktop - Qiwei\\u2019s MacBook Pro M1/Job/AI Project/personal-website-1/frontend/src/components/GenerateText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './GenerateText.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenerateText = () => {\n  _s();\n  const [generatedTexts, setGeneratedTexts] = useState({});\n  const [isLoading, setIsLoading] = useState({});\n  const handleGenerate = async model => {\n    setIsLoading(prev => ({\n      ...prev,\n      [model]: true\n    }));\n    try {\n      const response = await axios.post('https://api.chenqiwei.org/generate', {\n        model: model\n      });\n      if (response.data.error) {\n        console.error('Backend error:', response.data.error);\n        setGeneratedTexts(prev => ({\n          ...prev,\n          [model]: `Error: ${response.data.error}`\n        }));\n      } else {\n        setGeneratedTexts(prev => ({\n          ...prev,\n          [model]: response.data.generated_text\n        }));\n      }\n    } catch (error) {\n      console.error('Request error:', error);\n      setGeneratedTexts(prev => ({\n        ...prev,\n        [model]: `Error: ${error.message}`\n      }));\n    } finally {\n      setIsLoading(prev => ({\n        ...prev,\n        [model]: false\n      }));\n    }\n  };\n  const handleClear = model => {\n    setGeneratedTexts(prev => {\n      const newTexts = {\n        ...prev\n      };\n      delete newTexts[model];\n      return newTexts;\n    });\n  };\n  const ModelBlock = ({\n    title,\n    model\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"model-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"generate-btn\",\n        onClick: () => handleGenerate(model),\n        disabled: isLoading[model],\n        children: isLoading[model] ? 'Generating...' : 'Generate Text'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-btn\",\n        onClick: () => handleClear(model),\n        disabled: !generatedTexts[model],\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), generatedTexts[model] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: generatedTexts[model]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shakespeare Text Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This model is trained on Shakespeare's text dataset.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"models-grid\",\n        children: [/*#__PURE__*/_jsxDEV(ModelBlock, {\n          title: \"Model with 2000 Iterations\",\n          model: \"out-shakespeare-char-2000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModelBlock, {\n          title: \"Model with 4000 Iterations\",\n          model: \"out-shakespeare-char-4000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModelBlock, {\n          title: \"Model with 8000 Iterations\",\n          model: \"out-shakespeare-char-8000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Jordan Peterson Text Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This model is trained on Jordan Peterson's lectures and writings.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"models-grid\",\n        children: [/*#__PURE__*/_jsxDEV(ModelBlock, {\n          title: \"Model with 2000 Iterations\",\n          model: \"out-peterson-char-2000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModelBlock, {\n          title: \"Model with 4000 Iterations\",\n          model: \"out-peterson-char-4000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModelBlock, {\n          title: \"Model with 8000 Iterations\",\n          model: \"out-peterson-char-8000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(GenerateText, \"Nx33R1/8dDcFjI/lZVF0BL5veR4=\");\n_c = GenerateText;\nexport default GenerateText;\nvar _c;\n$RefreshReg$(_c, \"GenerateText\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GenerateText","_s","generatedTexts","setGeneratedTexts","isLoading","setIsLoading","handleGenerate","model","prev","response","post","data","error","console","generated_text","message","handleClear","newTexts","ModelBlock","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/qiwei/Desktop/Desktop - Qiweiâ€™s MacBook Pro M1/Job/AI Project/personal-website-1/frontend/src/components/GenerateText.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './GenerateText.css'; // Import the CSS file for styling\n\nconst GenerateText = () => {\n  const [generatedTexts, setGeneratedTexts] = useState({});\n  const [isLoading, setIsLoading] = useState({});\n\n  const handleGenerate = async (model) => {\n    setIsLoading(prev => ({ ...prev, [model]: true }));\n    try {\n      const response = await axios.post('https://api.chenqiwei.org/generate', {\n        model: model\n      });\n      \n      if (response.data.error) {\n        console.error('Backend error:', response.data.error);\n        setGeneratedTexts(prev => ({\n          ...prev,\n          [model]: `Error: ${response.data.error}`\n        }));\n      } else {\n        setGeneratedTexts(prev => ({\n          ...prev,\n          [model]: response.data.generated_text\n        }));\n      }\n    } catch (error) {\n      console.error('Request error:', error);\n      setGeneratedTexts(prev => ({\n        ...prev,\n        [model]: `Error: ${error.message}`\n      }));\n    } finally {\n      setIsLoading(prev => ({ ...prev, [model]: false }));\n    }\n  };\n\n  const handleClear = (model) => {\n    setGeneratedTexts(prev => {\n      const newTexts = { ...prev };\n      delete newTexts[model];\n      return newTexts;\n    });\n  };\n\n  const ModelBlock = ({ title, model }) => (\n    <div className=\"model-block\">\n      <h2>{title}</h2>\n      <div className=\"button-container\">\n        <button \n          className=\"generate-btn\"\n          onClick={() => handleGenerate(model)}\n          disabled={isLoading[model]}\n        >\n          {isLoading[model] ? 'Generating...' : 'Generate Text'}\n        </button>\n        <button \n          className=\"clear-btn\"\n          onClick={() => handleClear(model)}\n          disabled={!generatedTexts[model]}\n        >\n          Clear\n        </button>\n      </div>\n      {generatedTexts[model] && (\n        <div className=\"output\">\n          <h3>Generated Text:</h3>\n          <p>{generatedTexts[model]}</p>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\">\n        <h1>Shakespeare Text Generator</h1>\n        <p>This model is trained on Shakespeare's text dataset.</p>\n        <div className=\"models-grid\">\n          <ModelBlock \n            title=\"Model with 2000 Iterations\" \n            model=\"out-shakespeare-char-2000\" \n          />\n          <ModelBlock \n            title=\"Model with 4000 Iterations\" \n            model=\"out-shakespeare-char-4000\" \n          />\n          <ModelBlock \n            title=\"Model with 8000 Iterations\" \n            model=\"out-shakespeare-char-8000\" \n          />\n        </div>\n      </div>\n\n      <div className=\"section\">\n        <h1>Jordan Peterson Text Generator</h1>\n        <p>This model is trained on Jordan Peterson's lectures and writings.</p>\n        <div className=\"models-grid\">\n          <ModelBlock \n            title=\"Model with 2000 Iterations\" \n            model=\"out-peterson-char-2000\" \n          />\n          <ModelBlock \n            title=\"Model with 4000 Iterations\" \n            model=\"out-peterson-char-4000\" \n          />\n          <ModelBlock \n            title=\"Model with 8000 Iterations\" \n            model=\"out-peterson-char-8000\" \n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GenerateText;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}