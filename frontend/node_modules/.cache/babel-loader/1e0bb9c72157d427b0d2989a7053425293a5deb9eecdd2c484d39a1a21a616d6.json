{"ast":null,"code":"import _objectSpread from\"/Users/qiwei/Desktop/Desktop - Qiwei\\u2019s MacBook Pro M1/Job/AI Project/personal-website-1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import axios from'axios';import'./GenerateText.css';// Import the CSS file for styling\n// 根据环境设置 API 基础 URL\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=process.env.NODE_ENV==='development'?'http://localhost:5001':'https://api.chenqiwei.org';const GenerateText=()=>{const[generatedTexts,setGeneratedTexts]=useState({});const[isLoading,setIsLoading]=useState({});const handleGenerate=async model=>{setIsLoading(prev=>_objectSpread(_objectSpread({},prev),{},{[model]:true}));try{// 确保传递正确的模型路径\nconsole.log(\"Sending request for model:\",model);// 添加日志\nconst response=await axios.post(\"\".concat(API_BASE_URL,\"/generate\"),{model:model// 例如: \"out-shakespeare-char-2000\"\n});console.log(\"Response:\",response.data);// 添加日志\nsetGeneratedTexts(prev=>_objectSpread(_objectSpread({},prev),{},{[model]:response.data.generated_text||response.data.error}));}catch(error){console.error('Error:',error);setGeneratedTexts(prev=>_objectSpread(_objectSpread({},prev),{},{[model]:\"Error: \".concat(error.message)}));}finally{setIsLoading(prev=>_objectSpread(_objectSpread({},prev),{},{[model]:false}));}};const handleClear=model=>{setGeneratedTexts(prev=>{const newTexts=_objectSpread({},prev);delete newTexts[model];return newTexts;});};const models=[{section:\"Shakespeare Text Generator\",description:\"This model is trained on Shakespeare's text dataset.\",variants:[{title:\"Model with 2000 Iterations\",id:\"out-shakespeare-char-2000\"// 确保这个ID与实际目录名称匹配\n},{title:\"Model with 4000 Iterations\",id:\"out-shakespeare-char-4000\"},{title:\"Model with 8000 Iterations\",id:\"out-shakespeare-char-8000\"}]},{section:\"Jordan Peterson Text Generator\",description:\"This model is trained on Jordan Peterson's lectures and writings.\",variants:[{title:\"Model with 2000 Iterations\",id:\"out-peterson-char-2000\"},{title:\"Model with 4000 Iterations\",id:\"out-peterson-char-4000\"},{title:\"Model with 8000 Iterations\",id:\"out-peterson-char-8000\"}]}];return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:models.map((modelSection,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h1\",{children:modelSection.section}),/*#__PURE__*/_jsx(\"p\",{children:modelSection.description}),/*#__PURE__*/_jsx(\"div\",{className:\"models-grid\",children:modelSection.variants.map(variant=>/*#__PURE__*/_jsxs(\"div\",{className:\"model-block\",children:[/*#__PURE__*/_jsx(\"h2\",{children:variant.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"generate-btn\",onClick:()=>handleGenerate(variant.id),disabled:isLoading[variant.id],children:isLoading[variant.id]?'Generating...':'Generate'}),/*#__PURE__*/_jsx(\"button\",{className:\"clear-btn\",onClick:()=>handleClear(variant.id),disabled:!generatedTexts[variant.id],children:\"Clear\"})]}),generatedTexts[variant.id]&&/*#__PURE__*/_jsxs(\"div\",{className:\"output\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Generated Text:\"}),/*#__PURE__*/_jsx(\"p\",{children:generatedTexts[variant.id]})]})]},variant.id))})]},index))});};export default GenerateText;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","process","env","NODE_ENV","GenerateText","generatedTexts","setGeneratedTexts","isLoading","setIsLoading","handleGenerate","model","prev","_objectSpread","console","log","response","post","concat","data","generated_text","error","message","handleClear","newTexts","models","section","description","variants","title","id","className","children","map","modelSection","index","variant","onClick","disabled"],"sources":["/Users/qiwei/Desktop/Desktop - Qiwei’s MacBook Pro M1/Job/AI Project/personal-website-1/frontend/src/components/GenerateText.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './GenerateText.css'; // Import the CSS file for styling\n\n// 根据环境设置 API 基础 URL\nconst API_BASE_URL = process.env.NODE_ENV === 'development' \n  ? 'http://localhost:5001'\n  : 'https://api.chenqiwei.org';\n\nconst GenerateText = () => {\n  const [generatedTexts, setGeneratedTexts] = useState({});\n  const [isLoading, setIsLoading] = useState({});\n\n  const handleGenerate = async (model) => {\n    setIsLoading(prev => ({ ...prev, [model]: true }));\n    try {\n      // 确保传递正确的模型路径\n      console.log(\"Sending request for model:\", model); // 添加日志\n      const response = await axios.post(`${API_BASE_URL}/generate`, {\n        model: model  // 例如: \"out-shakespeare-char-2000\"\n      });\n      \n      console.log(\"Response:\", response.data); // 添加日志\n      \n      setGeneratedTexts(prev => ({\n        ...prev,\n        [model]: response.data.generated_text || response.data.error\n      }));\n    } catch (error) {\n      console.error('Error:', error);\n      setGeneratedTexts(prev => ({\n        ...prev,\n        [model]: `Error: ${error.message}`\n      }));\n    } finally {\n      setIsLoading(prev => ({ ...prev, [model]: false }));\n    }\n  };\n\n  const handleClear = (model) => {\n    setGeneratedTexts(prev => {\n      const newTexts = { ...prev };\n      delete newTexts[model];\n      return newTexts;\n    });\n  };\n\n  const models = [\n    {\n      section: \"Shakespeare Text Generator\",\n      description: \"This model is trained on Shakespeare's text dataset.\",\n      variants: [\n        { \n          title: \"Model with 2000 Iterations\", \n          id: \"out-shakespeare-char-2000\"  // 确保这个ID与实际目录名称匹配\n        },\n        { \n          title: \"Model with 4000 Iterations\", \n          id: \"out-shakespeare-char-4000\"\n        },\n        { \n          title: \"Model with 8000 Iterations\", \n          id: \"out-shakespeare-char-8000\"\n        }\n      ]\n    },\n    {\n      section: \"Jordan Peterson Text Generator\",\n      description: \"This model is trained on Jordan Peterson's lectures and writings.\",\n      variants: [\n        { \n          title: \"Model with 2000 Iterations\", \n          id: \"out-peterson-char-2000\"\n        },\n        { \n          title: \"Model with 4000 Iterations\", \n          id: \"out-peterson-char-4000\"\n        },\n        { \n          title: \"Model with 8000 Iterations\", \n          id: \"out-peterson-char-8000\"\n        }\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"container\">\n      {models.map((modelSection, index) => (\n        <div key={index} className=\"section\">\n          <h1>{modelSection.section}</h1>\n          <p>{modelSection.description}</p>\n          <div className=\"models-grid\">\n            {modelSection.variants.map((variant) => (\n              <div key={variant.id} className=\"model-block\">\n                <h2>{variant.title}</h2>\n                <div className=\"button-container\">\n                  <button\n                    className=\"generate-btn\"\n                    onClick={() => handleGenerate(variant.id)}\n                    disabled={isLoading[variant.id]}\n                  >\n                    {isLoading[variant.id] ? 'Generating...' : 'Generate'}\n                  </button>\n                  <button\n                    className=\"clear-btn\"\n                    onClick={() => handleClear(variant.id)}\n                    disabled={!generatedTexts[variant.id]}\n                  >\n                    Clear\n                  </button>\n                </div>\n                {generatedTexts[variant.id] && (\n                  <div className=\"output\">\n                    <h3>Generated Text:</h3>\n                    <p>{generatedTexts[variant.id]}</p>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default GenerateText;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}